;;;; Created on 2011-06-02 14:00:48
(in-package :todotree)
(defcontroller :tasks :options ((:use :todotree :todotree-model) (:import-from :todotree :user-id :*user*)) :view-type :html)
(in-package :tasks)
(defaction get-children ()()
  (let ((tasks (get-child-tasks  (parse-integer (hunchentoot:parameter "id") :junk-allowed t) (user-id))))
     (make-view (list :user todotree::*user* :tasks tasks) :name "tree" :type :partial)))
(defaction delete-completed (tab-id) (:view-type :json)
  (destroy-records 'task :conditions (list :tab-id (if (string-equal tab-id "unsorted") 0 tab-id) :completed t))
  (make-view (list :tab-id tab-id) :type :json))
(defaction add (tab-id) ()
  (let ((priority (intern (string-upcase (hunchentoot:parameter "priority")) :keyword)))
    (if (string-equal tab-id "unsorted")
        (add-tab-task 0 (hunchentoot:parameter "name") :priority priority :user-id (user-id))
        (add-tab-task (fetch 'tab tab-id) (hunchentoot:parameter "name") :priority priority)))
  (make-view (list :tab-id tab-id) :type :json))
(defaction check (id checked) ()
  (toggle-task id checked)
  (make-view (list :completed (task-completed (fetch 'task id))) :type :json))
(defaction add-subtask (parent-id) ()
    (add-child-task parent-id 
                    (hunchentoot:parameter "name") 
                    :priority (hunchentoot:parameter "priority"))
  (make-view (list :id parent-id) :type :json))